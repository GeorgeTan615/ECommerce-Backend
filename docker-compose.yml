---
version: '3'
services:
  ## Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    expose:
      - "8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Eureka Server
  discovery-server:
    image: 010615/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  ## Api Gateway
  api-gateway:
    image: 010615/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8095:8095"
    expose:
      - "8095"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
      - keycloak

  ## Product-Service Docker Compose Config
  product-service:
    container_name: product-service
    image: 010615/product-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI = mongodb+srv://georgetan615:georgetan615@product-service.atqaful.mongodb.net/product-service
      - MONGODB_DATABASE = product-service
    depends_on:
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: 010615/order-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PSCALE_MYSQL_URI=jdbc:mysql://ap-southeast.connect.psdb.cloud/ecommerce?sslMode=VERIFY_IDENTITY
      - PSCALE_USERNAME = 553dees6ytcpz1uoqwjl
      - PSCALE_PASSWORD = pscale_pw_R6E3uYvqc0QWvEyK0B4ADJWZ8lH03jQ8p1RaNabwz9F
    depends_on:
      - broker
      - discovery-server
      - api-gateway

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: 010615/inventory-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PSCALE_MYSQL_URI=jdbc:mysql://ap-southeast.connect.psdb.cloud/ecommerce?sslMode=VERIFY_IDENTITY
      - PSCALE_USERNAME = 553dees6ytcpz1uoqwjl
      - PSCALE_PASSWORD = pscale_pw_R6E3uYvqc0QWvEyK0B4ADJWZ8lH03jQ8p1RaNabwz9F
    depends_on:
      - discovery-server
      - api-gateway

  ## Notification-Service Docker Compose Config
  notification-service:
    container_name: notification-service
    image: 010615/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - discovery-server
      - api-gateway